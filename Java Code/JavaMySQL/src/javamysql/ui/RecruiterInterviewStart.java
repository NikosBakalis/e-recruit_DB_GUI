/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package javamysql.ui;

import java.sql.Date;
import java.sql.Time;
import java.text.SimpleDateFormat;
import javamysql.database.ICRUDImpl;
import javamysql.model.Interview;

/**
 *
 * @author Nikolas
 */
public class RecruiterInterviewStart extends javax.swing.JFrame {
    
    ICRUDImpl iCRUDImpl = new ICRUDImpl();
    Interview interview = new Interview();
    RecruiterInterviewUI interviewUI = new RecruiterInterviewUI();
    RecruiterNewPosition recruiterNewPosition = new RecruiterNewPosition();
    
    private static String newRecruiterUsername, newCandidateUsername, newComments;
    private static int newJobID, newPersonalityScore, newEducationScore, newExperienceScore;
    // private static java.util.Date newInterviewDate;
    // private static Time newStartingTime, newDuration;
    
    protected String intToStringJobID = Integer.toString(interviewUI.getValueJobID());
    
    protected int stringToIntJobID;
    
    SimpleDateFormat dateFormatDate = new SimpleDateFormat("yyyy-MM-dd");
    SimpleDateFormat dateFormatTime = new SimpleDateFormat("HH:mm:ss");
    
    private static Date newInterviewDate = new Date(System.currentTimeMillis());
    private static Time newStartingTime = new Time(System.currentTimeMillis());
    private static Date newEndingTime;
    private static Time newDuration;
    
    protected long newDurationLong;

    /**
     * Creates new form InterviewStart
     */
    public RecruiterInterviewStart() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        RecruiterUsername = new javax.swing.JLabel();
        changeRecruiterUsername = new javax.swing.JTextField();
        changeCandidateUsername = new javax.swing.JTextField();
        CandidateUsername = new javax.swing.JLabel();
        changeJobID = new javax.swing.JTextField();
        JobID = new javax.swing.JLabel();
        PerosnalityScore = new javax.swing.JLabel();
        changePersonalityScore = new javax.swing.JComboBox<>();
        EducationScore = new javax.swing.JLabel();
        changeEducationScore = new javax.swing.JComboBox<>();
        changeExperienceScore = new javax.swing.JComboBox<>();
        ExperienceScore = new javax.swing.JLabel();
        Comments = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        changeComments = new javax.swing.JTextArea();
        ButtonSave = new javax.swing.JButton();
        ButtonDismiss = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jLabel1.setFont(new java.awt.Font("Tahoma", 3, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Interview");

        RecruiterUsername.setText("Recruiter Username");

        changeRecruiterUsername.setEditable(false);
        changeRecruiterUsername.setText(recruiterNewPosition.getValueRecruiter());

        changeCandidateUsername.setEditable(false);
        changeCandidateUsername.setText(interviewUI.getValueCandidateUsername());

        CandidateUsername.setText("Candidate Username");

        changeJobID.setEditable(false);
        changeJobID.setText(intToStringJobID);

        JobID.setText("JobID");

        PerosnalityScore.setText("Personality Score");

        changePersonalityScore.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "0", "1", "2", "3", "4", "5" }));

        EducationScore.setText("Education Score");

        changeEducationScore.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "0", "1", "2", "3", "4", "5" }));

        changeExperienceScore.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "0", "1", "2", "3", "4", "5" }));

        ExperienceScore.setText("Experience Score");

        Comments.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Comments.setText("Comments");

        changeComments.setColumns(20);
        changeComments.setRows(5);
        jScrollPane1.setViewportView(changeComments);

        ButtonSave.setText("Save");
        ButtonSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonSaveActionPerformed(evt);
            }
        });

        ButtonDismiss.setText("Dismiss");
        ButtonDismiss.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonDismissActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(289, 289, 289)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(RecruiterUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(changeRecruiterUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(CandidateUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(changeCandidateUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(JobID, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(changeJobID, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 96, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(PerosnalityScore, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(changePersonalityScore, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(EducationScore, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(changeEducationScore, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(ExperienceScore, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(changeExperienceScore, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(93, 93, 93)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(236, 236, 236)
                .addComponent(ButtonSave)
                .addGap(223, 223, 223)
                .addComponent(ButtonDismiss)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Comments, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(75, 75, 75))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(64, 64, 64)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(RecruiterUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(changeRecruiterUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(PerosnalityScore, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(changePersonalityScore, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(49, 49, 49)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(CandidateUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(changeCandidateUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(49, 49, 49)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(JobID, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(changeJobID, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(EducationScore, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(changeEducationScore, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(49, 49, 49)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(ExperienceScore, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(changeExperienceScore, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(Comments, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 51, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ButtonSave)
                    .addComponent(ButtonDismiss))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void ButtonDismissActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonDismissActionPerformed
        this.dispose();
    }//GEN-LAST:event_ButtonDismissActionPerformed

    private void ButtonSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonSaveActionPerformed
        setNewRecruiterUsername(changeRecruiterUsername.getText());
        setNewCandidateUsername(changeCandidateUsername.getText());
        stringToIntJobID = Integer.parseInt(changeJobID.getText());
        setNewJobID(stringToIntJobID);
        setNewPersonalityScore(changePersonalityScore.getSelectedIndex());
        setNewEducationScore(changeEducationScore.getSelectedIndex());
        setNewExperienceScore(changeExperienceScore.getSelectedIndex());
        setNewComments(changeComments.getText());
        setNewEndingTime(newEndingTime);
        newEndingTime = new Date(System.currentTimeMillis());
        setNewEndingTime(newEndingTime);
        newEndingTime = new Date(System.currentTimeMillis());
        setNewEndingTime(newEndingTime);
        long diff = getNewEndingTime().getTime() - getNewStartingTime().getTime() - 7200000;
        setNewDuration(new Time(diff));
        iCRUDImpl.interviewStart(interview.getRecruiterUsername(),interview.getCandidateUsername(), interview.getJobID());
        this.dispose();
        iCRUDImpl.getInterview(interview.getRecruiterUsername(), interview.getCandidateUsername(), interview.getJobID());
    }//GEN-LAST:event_ButtonSaveActionPerformed
    /*    */
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RecruiterInterviewStart.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RecruiterInterviewStart.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RecruiterInterviewStart.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RecruiterInterviewStart.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RecruiterInterviewStart().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ButtonDismiss;
    private javax.swing.JButton ButtonSave;
    private javax.swing.JLabel CandidateUsername;
    private javax.swing.JLabel Comments;
    private javax.swing.JLabel EducationScore;
    private javax.swing.JLabel ExperienceScore;
    private javax.swing.JLabel JobID;
    private javax.swing.JLabel PerosnalityScore;
    private javax.swing.JLabel RecruiterUsername;
    private javax.swing.JTextField changeCandidateUsername;
    private javax.swing.JTextArea changeComments;
    private javax.swing.JComboBox<String> changeEducationScore;
    private javax.swing.JComboBox<String> changeExperienceScore;
    private javax.swing.JTextField changeJobID;
    private javax.swing.JComboBox<String> changePersonalityScore;
    private javax.swing.JTextField changeRecruiterUsername;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

    /**
     * @return the newRecruiterUsername
     */
    public String getNewRecruiterUsername() {
        return newRecruiterUsername;
    }

    /**
     * @param newRecruiterUsername the newRecruiterUsername to set
     */
    public void setNewRecruiterUsername(String newRecruiterUsername) {
        RecruiterInterviewStart.newRecruiterUsername = newRecruiterUsername;
    }

    /**
     * @return the newCandidateUsername
     */
    public String getNewCandidateUsername() {
        return newCandidateUsername;
    }

    /**
     * @param newCandidateUsername the newCandidateUsername to set
     */
    public void setNewCandidateUsername(String newCandidateUsername) {
        RecruiterInterviewStart.newCandidateUsername = newCandidateUsername;
    }

    /**
     * @return the newComments
     */
    public String getNewComments() {
        return newComments;
    }

    /**
     * @param newComments the newComments to set
     */
    public void setNewComments(String newComments) {
        RecruiterInterviewStart.newComments = newComments;
    }

    /**
     * @return the newJobID
     */
    public int getNewJobID() {
        return newJobID;
    }

    /**
     * @param newJobID the newJobID to set
     */
    public void setNewJobID(int newJobID) {
        RecruiterInterviewStart.newJobID = newJobID;
    }

    /**
     * @return the newPersonalityScore
     */
    public int getNewPersonalityScore() {
        return newPersonalityScore;
    }

    /**
     * @param newPersonalityScore the newPersonalityScore to set
     */
    public void setNewPersonalityScore(int newPersonalityScore) {
        RecruiterInterviewStart.newPersonalityScore = newPersonalityScore;
    }

    /**
     * @return the newEducationScore
     */
    public int getNewEducationScore() {
        return newEducationScore;
    }

    /**
     * @param newEducationScore the newEducationScore to set
     */
    public void setNewEducationScore(int newEducationScore) {
        RecruiterInterviewStart.newEducationScore = newEducationScore;
    }

    /**
     * @return the newExperienceScore
     */
    public int getNewExperienceScore() {
        return newExperienceScore;
    }

    /**
     * @param newExperienceScore the newExperienceScore to set
     */
    public void setNewExperienceScore(int newExperienceScore) {
        RecruiterInterviewStart.newExperienceScore = newExperienceScore;
    }
    
    /**
     * @return the newInterviewDate
     */
    public Date getNewInterviewDate() {
        return newInterviewDate;
    }

    /**
     * @param newInterviewDate the newInterviewDate to set
     */
    public void setNewInterviewDate(Date newInterviewDate) {
        RecruiterInterviewStart.newInterviewDate = newInterviewDate;
    }

    /**
     * @return the newStartingTime
     */
    public Time getNewStartingTime() {
        return newStartingTime;
    }

    /**
     * @param newStartingTime the newStartingTime to set
     */
    public void setNewStartingTime(Time newStartingTime) {
        RecruiterInterviewStart.newStartingTime = newStartingTime;
    }
    
    /**
     * @return the newEndingTime
     */
    public Date getNewEndingTime() {
        return newEndingTime;
    }

    /**
     * @param newEndingTime the newEndingTime to set
     */
    public void setNewEndingTime(Date newEndingTime) {
        RecruiterInterviewStart.newEndingTime = newEndingTime;
    }
    
    /**
     * @return the newDuration
     */
    public Time getNewDuration() {
        return newDuration;
    }

    /**
     * @param newDuration the newDuration to set
     */
    public void setNewDuration(Time newDuration) {
        RecruiterInterviewStart.newDuration = newDuration;
    }

}
