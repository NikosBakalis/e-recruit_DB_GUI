/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package javamysql.ui;

import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javamysql.database.ICRUDImpl;
import javamysql.model.Candidate;
import javamysql.model.Job;
import javax.swing.table.TableModel;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author Nikolas
 */
public class CandidateAppliesNew extends javax.swing.JFrame {
    
    ICRUDImpl iCRUDImpl = new ICRUDImpl();
    Candidate candidate = new Candidate();
    Job job = new Job();
    
    private static int valueID;
    private static String valueRecruiter;

    /**
     * Creates new form CandidateAppliesNew
     */
    public CandidateAppliesNew() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TableApplies = new javax.swing.JTable();
        ButtonOpenForApply = new javax.swing.JButton();
        ButtonMyApplies = new javax.swing.JButton();
        ButtonCompleted = new javax.swing.JButton();
        ButtonBack = new javax.swing.JButton();
        ButtonJobMoreInfo = new javax.swing.JButton();
        ButtonDeleteApplies = new javax.swing.JButton();
        ButtonApply = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        TableApplies.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
            },
            new String [] {
                "job_ID", "position"
            }
        ));
        TableApplies.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TableAppliesMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(TableApplies);

        ButtonOpenForApply.setText("Open For Apply");
        ButtonOpenForApply.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonOpenForApplyActionPerformed(evt);
            }
        });

        ButtonMyApplies.setText("My Applies");
        ButtonMyApplies.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonMyAppliesActionPerformed(evt);
            }
        });

        ButtonCompleted.setText("Completed");
        ButtonCompleted.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonCompletedActionPerformed(evt);
            }
        });

        ButtonBack.setText("Back");
        ButtonBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonBackActionPerformed(evt);
            }
        });

        ButtonJobMoreInfo.setText("More Info");
        ButtonJobMoreInfo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonJobMoreInfoActionPerformed(evt);
            }
        });

        ButtonDeleteApplies.setText("Delete Apply");
        ButtonDeleteApplies.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonDeleteAppliesActionPerformed(evt);
            }
        });

        ButtonApply.setText("Apply");
        ButtonApply.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonApplyActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(ButtonOpenForApply)
                        .addGap(55, 55, 55)
                        .addComponent(ButtonMyApplies)
                        .addGap(57, 57, 57)
                        .addComponent(ButtonCompleted)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 57, Short.MAX_VALUE)
                        .addComponent(ButtonDeleteApplies)
                        .addGap(61, 61, 61)
                        .addComponent(ButtonApply)
                        .addGap(59, 59, 59)
                        .addComponent(ButtonJobMoreInfo)
                        .addGap(48, 48, 48)
                        .addComponent(ButtonBack)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 368, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ButtonOpenForApply)
                    .addComponent(ButtonMyApplies)
                    .addComponent(ButtonCompleted)
                    .addComponent(ButtonBack)
                    .addComponent(ButtonJobMoreInfo)
                    .addComponent(ButtonDeleteApplies)
                    .addComponent(ButtonApply))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void ButtonOpenForApplyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonOpenForApplyActionPerformed
        getOpenAppliesNew(candidate.getUsername());
    }//GEN-LAST:event_ButtonOpenForApplyActionPerformed

    private void ButtonMyAppliesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonMyAppliesActionPerformed
        getAppliesNew(candidate.getUsername());
    }//GEN-LAST:event_ButtonMyAppliesActionPerformed

    private void ButtonBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonBackActionPerformed
        CandidateUI candidateUI = new CandidateUI();
        candidateUI.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_ButtonBackActionPerformed

    private void ButtonJobMoreInfoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonJobMoreInfoActionPerformed
        CandidateJobMoreInfo candidateJobMoreInfo = new CandidateJobMoreInfo();
        candidateJobMoreInfo.setVisible(true);
    }//GEN-LAST:event_ButtonJobMoreInfoActionPerformed

    private void TableAppliesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TableAppliesMouseClicked
        int row = TableApplies.getSelectedRow();
        TableModel model = TableApplies.getModel();
        setValueID(Integer.parseInt(model.getValueAt(row, 0).toString()));
        setValueRecruiter(TableApplies.getModel().getValueAt(row, 1).toString());
    }//GEN-LAST:event_TableAppliesMouseClicked

    private void ButtonDeleteAppliesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonDeleteAppliesActionPerformed
        iCRUDImpl.delApplies(candidate.getUsername(), valueID);
    }//GEN-LAST:event_ButtonDeleteAppliesActionPerformed

    private void ButtonApplyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonApplyActionPerformed
        iCRUDImpl.getApplies(candidate.getUsername(), valueID);
    }//GEN-LAST:event_ButtonApplyActionPerformed

    private void ButtonCompletedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonCompletedActionPerformed
        getCompletedAppliesNew(candidate.getUsername());
    }//GEN-LAST:event_ButtonCompletedActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CandidateAppliesNew.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CandidateAppliesNew.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CandidateAppliesNew.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CandidateAppliesNew.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CandidateAppliesNew().setVisible(true);
            }
        });
    }
    
    public CandidateAppliesNew getOpenAppliesNew(String username) {
        iCRUDImpl.openConnection();
        try{
            CandidateAppliesNew getAppliesNew = new CandidateAppliesNew();
            // String query = "SELECT DISTINCT applies.job_ID, position FROM job INNER JOIN applies ON job.id = applies.job_id WHERE cand_usrname != '" + username + "' AND NOW() < job.submission_date";
            String query = "SELECT id, position FROM job WHERE NOW() < job.submission_date";
            PreparedStatement preparedStatement = iCRUDImpl.getConnection().prepareStatement(query);
            ResultSet resultSet = preparedStatement.executeQuery();
            TableApplies.setModel(DbUtils.resultSetToTableModel(resultSet));
            return getAppliesNew;
        } catch (SQLException e) {
            return null;
        }
    }
    
    public CandidateAppliesNew getAppliesNew(String username) {
        iCRUDImpl.openConnection();
        try{
            CandidateAppliesNew getAppliesNew = new CandidateAppliesNew();
            String query = "SELECT DISTINCT applies.job_ID, position FROM job INNER JOIN applies ON job.id = applies.job_id WHERE cand_usrname = '" + username + "' AND NOW() < job.submission_date";
            PreparedStatement preparedStatement = iCRUDImpl.getConnection().prepareStatement(query);
            ResultSet resultSet = preparedStatement.executeQuery();
            TableApplies.setModel(DbUtils.resultSetToTableModel(resultSet));
            return getAppliesNew;
        } catch (SQLException e) {
            return null;
        }
    }
    
    public CandidateAppliesNew getCompletedAppliesNew(String username) {
        iCRUDImpl.openConnection();
        try{
            CandidateAppliesNew getCompletedAppliesNew = new CandidateAppliesNew();
            String query = "SELECT DISTINCT applies.job_ID, position FROM job INNER JOIN applies ON job.id = applies.job_id WHERE cand_usrname = '" + username + "' AND NOW() > job.submission_date";
            PreparedStatement preparedStatement = iCRUDImpl.getConnection().prepareStatement(query);
            ResultSet resultSet = preparedStatement.executeQuery();
            TableApplies.setModel(DbUtils.resultSetToTableModel(resultSet));
            return getCompletedAppliesNew;
        } catch (SQLException e) {
            return null;
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ButtonApply;
    private javax.swing.JButton ButtonBack;
    private javax.swing.JButton ButtonCompleted;
    private javax.swing.JButton ButtonDeleteApplies;
    private javax.swing.JButton ButtonJobMoreInfo;
    private javax.swing.JButton ButtonMyApplies;
    private javax.swing.JButton ButtonOpenForApply;
    private javax.swing.JTable TableApplies;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

    /**
     * @return the valueID
     */
    public int getValueID() {
        return valueID;
    }

    /**
     * @param valueID the valueID to set
     */
    public void setValueID(int valueID) {
        CandidateAppliesNew.valueID = valueID;
    }

    /**
     * @return the valueRecruiter
     */
    public String getValueRecruiter() {
        return valueRecruiter;
    }

    /**
     * @param valueRecruiter the valueCandidate to set
     */
    public void setValueRecruiter(String valueRecruiter) {
        CandidateAppliesNew.valueRecruiter = valueRecruiter;
    }
}
